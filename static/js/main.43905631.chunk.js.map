{"version":3,"sources":["components/PolicyCard/PolicyCard.js","App.js","index.js"],"names":["PolicyCard","props","_useState","useState","_useState2","Object","slicedToArray","active","setActive","toggleActive","react_default","a","createElement","Card","className","concat","onClick","Body","Button","index_es","icon","faChevronRight","title","id","description","coverage_start_date","coverage_end_date","status","faCircle","premium_formatted","renewal","Fragment","src","partner_logo","alt","URL","App","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","data","setData","useEffect","fetch","then","response","json","policies","catch","e","length","Container","map","policy","components_PolicyCard_PolicyCard","key","type","premium","payment_date","partner_id","partner","partner_name","logo","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.43905631.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight, faCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst PolicyCard = (props) => {\n    const [active, setActive] = useState(false);\n\n    const toggleActive = () => {\n        setActive(!active);\n    }\n\n    return (\n        <Card className={`policy-card ${active ? 'active' : ''}`} onClick={toggleActive}>\n            <Card.Body>\n                <div className={'card-left'}>\n                    <div className={'card-top'}>\n                        <Button\n                            className={'card-button'}\n                            onClick={toggleActive}\n                        >\n                            <FontAwesomeIcon icon={faChevronRight} />\n                        </Button>\n                        <div className={'card-title-section'}>\n                            <div className={'title'}>{props.title}</div>\n                            <div className={'description-wrapper'}>\n                                <div className={'id'}>{props.id}</div>\n                                <div className={'divider-vert-sm'}></div>\n                                <div className={'desc'}>{props.description}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={'card-bottom'}>\n                        <div className={'payment_date'}>\n                            {/* {props.payment_date} */}17-APR-2018<br/>\n                            <p className={'payment_date_title'}>Payment date</p>\n                        </div>\n                        <div className={'divider-vert-md'}></div>\n                        <div className={'coverage_date'}>\n                            {props.coverage_start_date} to {props.coverage_end_date}<br/>\n                            <p className={'coverage_date_title'}>Coverage dates</p>\n                            {\n                                props.status === \"active\"\n                                ? <div className={'status active'}>\n                                {props.status}\n                                <FontAwesomeIcon className={'status-icon'} icon={faCircle}/>\n                                </div>\n                                : <div className={'status expired'}>\n                                {props.status}\n                                <FontAwesomeIcon className={'status-icon'} icon={faCircle}/>\n                                </div>\n                            }\n                        </div>\n                        <div className={'divider-vert-md'}></div>\n                        <div className={'price_premium'}>\n                            {props.premium_formatted}<br/>\n                            <p className={'price_premium_title'}>Price/Premium</p>\n                        </div>\n                        {\n                            props.renewal !== null\n                            ? <>\n                                <div className={'divider-vert-md'}></div>\n                                <div className={'renewal'}>\n                                    {props.renewal}<br/>\n                                    <p className={'renewal_title'}>Renewal</p>\n                                </div>\n                            </>\n                            : null\n                        }\n                    </div>\n                </div>\n                <div className={'card-right'}>\n                    <div className={'logo-container'}>\n                        <img className={'logo'} src={props.partner_logo} alt=\"Partner Logo\"/>\n                    </div>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default PolicyCard;\n","import React, { useState, useEffect } from 'react';\nimport PolicyCard from \"./components/PolicyCard/PolicyCard\";\nimport { Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './styles.css'\n\nconst URL = 'https://7946a218-d225-4d0e-80ac-450bbc9713a0.mock.pstmn.io/booking';\n\nfunction App() {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(URL)\n        .then((response) => response.json())\n        .then((data) => {\n            setLoading(false);\n            const {policies} = data\n            setData(policies);\n        })\n        .catch((e) => {\n            setLoading(false);\n            setError('Fetch Failed');\n        });\n    }, []);\n    \n    if (loading) {\n        return <p>loading...</p>\n    }\n\n    if (error !== '') {\n        return <p>Error: {error}</p>\n    }\n\n    if (data.length) {\n        return (\n            <Container>\n                <h1 className={'page-title'}>Your Policies</h1>\n                { data.map(policy =>\n                        <PolicyCard \n                            key={policy.id}\n                            id={policy.id}\n                            type={policy.type}\n                            title={policy.title}\n                            description={policy.description}\n                            status={policy.status}\n                            premium={policy.premium}\n                            premium_formatted={policy.premium_formatted}\n                            payment_date={policy.payment_date}\n                            coverage_start_date={policy.coverage_start_date}\n                            coverage_end_date={policy.coverage_start_date}\n                            renewal={policy.renewal}\n                            partner_id={policy.partner.id}\n                            partner_name={policy.partner}\n                            partner_logo={policy.partner.logo}\n                        />\n                    )\n                }\n            </Container>\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport './styles.css'\n\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}